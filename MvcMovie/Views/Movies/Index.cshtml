@model MvcMovie.Models.MovieGenreViewModel
@using Microsoft.AspNetCore.Identity

@inject SignInManager<MvcMovieUser> SignInManager
@inject MvcMovieUserManager UserManager

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@if (SignInManager.IsSignedIn(User))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<form asp-controller="Movies" asp-action="Index" method="get">
    <p>

        Genre: <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>

        Rating: <select asp-for="MovieRating" asp-items="Model.Ratings">
            <option value="">All</option>
        </select>

        Title: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]">
                    @Html.DisplayNameFor(model => model.Movies![0].Title)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">
                    @Html.DisplayNameFor(model => model.Movies![0].ReleaseDate)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Rating)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies!)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">
                        @Html.DisplayFor(modelItem => item.Title)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                @if (SignInManager.IsSignedIn(User)) 
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>